# This file stores custom settings for MINIQUERY. The settings can be
# changed dynamically by running the "set", "seta" or "setv" commands
# for settings, aliases and variables, respectively.
# The changes can be made permanent by running the "save" command.

# The connection string ("URL") tells the application how to connect to your DB.
# For details on how to determine or construct this string, refer to the
# "Engine Configuration" page of SQLAlchemy's online documentation.
# Strictly speaking, if you run MINIQUERY in query-only mode eschewing all
# communication with a database driver, this string will not be necessary.
[ConnectionString]
    
    # You can define the connection string in any of three ways:
    #   "FullString"   : The full connection string written out literally
    #   "FullPath"     : A fully-qualified file name, sometimes preceded by
    #                    the DB engine. (This is common in sqlite setups.)
    #   "Components"   : Used to specify each component of the database URL 
    #                    piece-by-piece. Usually some components will be blank.
    # The following setting, "definitionType," selects from these three methods.
    definitionType=Components

    [[FullString]]
    # The string must follow the DB URL syntax exactly, including all special characters
    MINI_CONNECTION_STRING=

    [[FullPath]]
    # The dialect (e.g. "postgresql") is sometimes omitted
    MINI_DIALECT=
    # The path must be populated
    MINI_DBPATH=

    [[Components]]
    # If you choose the Components method, you must define the components of
    # the URL one-by-one (leaving some blank as appropriate). THE DATABASE NAME
    # COMPONENT IS AN EXCEPTION: we do NOT define it here. Instead, we pull it
    # from the value of 'database' in the [Settings] section.
    MINI_DIALECT=mysql
    MINI_DRIVER=mysqldb    # pymysql, psycopg2, mysqldb, etc. If blank, will use the "most popular"
    MINI_USER=root       # MINI_USER also allows username to be included in the prompt
    MINI_PASSWORD=       # Password may be left blank & entered when MINIQUERY asks for it
    MINI_HOST=localhost  # MINI_HOST also allows hostname to be included in the prompt
    MINI_PORT=3306
    MINI_DRIVER_OPTIONS=     # format: thisParam=1&thatParam=2 (etc.)

# Built-in settings to suit the user's preferences. Most of the following
# are overrideable at command-by-command granularity by invoking
# the appropriate option(s) with your queries.
[Settings]

    # Run mode: "query" (show the query), "run" (execute the query), or "both".
    # You can override this setting for any single query by providing
    # '-q' and/or '-r' on the command line.
    runMode=both

    # Delimiter and continuer: End-of-line character sequences that force
    # command interpretation to stop at the current line (single-line protocol)
    # or continue to the next (multiline protocol).
    #
    # Endline protocol: Defines the default action of the ENTER key so that
    # either the delimiter or continuer need not be explicitly used; you choose
    # which one shall be implicit.
    # Valid options are 'delimit' and 'continue'.
    delimiter=;;
    continuer=\
    endlineProtocol=delimit

    # default history size used by the "history" command
    historyLength=10

    # Result set output format. Options include:
    #       tab
    #       wrap
    #       nowrap
    #       vertical
    format=wrap

    # "Anchor" MINIQUERY at a specific table of a specific database so that
    # the application assumes your queries pertain to that table until
    # you change the anchoring or erase it with the "db" and "table" commands.
    database=northwind
    table=

    # Command leader: Similar to the "leader" setting from (neo-)vim, this is
    # a prefix that MINIQUERY uses to distinguish system commands like "quit"
    # and "help" from mini-queries. Every command that starts with the Leader
    # is treated as a MINIQUERY system command. Every other command is treated
    # as a mini-query.
    # If not set here, the Leader defaults to the backslash character.
    leader=\

    # Editing mode: "VI" or "EMACS". Mimics the editing mode of the popular
    # command shells and GNU readline.
    editMode=EMACS

    # The MINIQUERY prompt can be customized to display program state
    # information and literal text, both colorized, according to
    # a format string you specify.
    # Here are the prompt settings; see below for a detailed explanation.
    prompt=[${u}@${h}]----[${d:yU}.${t:yU}]----
    promptSymbol='--->> '
    secondarySymbol='   --> '
    # The program-state expressions in the prompt take one of the forms
    #     ${v}   or   ${v:cF}
    # where
    #    v = a (single-letter) state variable; currently supported are
    #        "u"ser, "h"ost, "d"atabase, and "t"able.
    #    c = the (single-letter) color, which can be
    #        "w"hite  "b"lue   "p"ink    "g"reen  brow"n"
    #        "r"ed    "y"ellow "o"range  blac"k"  gr"a"y
    #    F = the (CAPITAL-letter) features. More than one may be specified:
    #        (Take note, these are not always available on Windows systems.)
    #        "B"old  "U"nderline  "I"talic
    #
    # The "prompt symbol" defined above terminates the prompt, right before the text entry
    # area. This is often set to an arrow-like character sequence, a dollar sign, etc.
    # The "secondary symbol" is the line-continuation symbol for multi-line commands.

# Customize the completion behavior for command names and DB objects
[Completion]

    # Should the system assume the first letter of a completable name is truly
    # the initial letter of the completion?
    # (This controls the regular expression that is used to expand
    # the command-line argument 'ab', namely, either '^a.*b' or 'a.*b'.)
    # If 'true', you can override this setting for any given argument by
    # prepending it with a leading asterisk ('*').
    assumeInitial=false

    # A list of custom abbreviations and their meanings to suit your taste.
    # The '=' is REQUIRED to delimit the abbreviations and their interpretations.
    # Use regular expressions for precise control of the expansion behavior.
    # The example below will make '[Pp]x' an abbreviation for '[Pp]rice'
    # when it occurs at the END of a name.
    [[Abbreviations]]
    # [Pp]x$=[Pp]rice$

# Command aliases
[Aliases]
#qmz=quit          # This would cause 'qmz' to represent the 'quit' command
delimiter=set delimiter
continuer=set continuer

# User-defined variables. These are similar to shell variables: they function as
# substitution macros in MINI queries when preceded by a dollar sign. To ensure
# correct interpretation, protect with braces, viz.  ${a}b or ${ab} versus $ab.
[Variables]
# v=100-200         # This would cause MINIQUERY to transform the subexpression
                    # 'vl=$v' into 'vl=100-200'. Then, given a column named
                    # "value" in the anchor table, this expression would
                    # become the SQL predicate 'value BETWEEN 100 AND 200'
                    # (assuming that 'vl' expands *unambiguously*
                    # to 'value' in the context of your anchor table.)

